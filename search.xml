<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>HTML学习笔记（2）</title>
      <link href="/21f4f4f0/"/>
      <url>/21f4f4f0/</url>
      <content type="html"><![CDATA[<h1 id="Html介绍"><a href="#Html介绍" class="headerlink" title="Html介绍"></a>Html介绍</h1><h2 id="Html、CSS、JS的关系"><a href="#Html、CSS、JS的关系" class="headerlink" title="Html、CSS、JS的关系"></a>Html、CSS、JS的关系</h2><p>学习web前端开发基础技术需要掌握：HTML、CSS、JavaScript语言。下面我们就来了解下这三门技术都是用来实现什么的：</p><ol><li><strong>HTML是网页内容的载体</strong>。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。</li><li><strong>CSS样式是表现</strong>。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。</li><li><strong>JavaScript是用来实现网页上的特效效果</strong>。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。</li></ol><h2 id="Html基本结构"><a href="#Html基本结构" class="headerlink" title="Html基本结构"></a>Html基本结构</h2><p>html文件的结构：一个HTML文件是有自己固定的结构的。</p><pre><code>&lt;html&gt;    &lt;head&gt;...&lt;/head&gt;    &lt;body&gt;...&lt;/body&gt;&lt;/html&gt;</code></pre><p>代码讲解：</p><ol><li><code>&lt;html&gt;&lt;/html&gt;</code>称为根标签，所有的网页标签都在<code>&lt;html&gt;&lt;/html&gt;</code>中。</li><li><code>&lt;head&gt;</code>标签用于定义文档的头部，它是所有头部元素的容器。头部元素有<code>&lt;title&gt;</code>、<code>&lt;script&gt;</code>、 <code>&lt;style&gt;</code>、<code>&lt;link&gt;</code>、 <code>&lt;meta&gt;</code>等标签，头部标签在下一小节中会有详细介绍。</li><li>在<code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>标签之间的内容是网页的主要内容，如<code>&lt;h1&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;a&gt;</code>、<code>&lt;img&gt;</code>等网页内容标签，在这里的标签中的内容会在浏览器中显示出来。</li></ol><h2 id="初识Html标签"><a href="#初识Html标签" class="headerlink" title="初识Html标签"></a>初识Html标签</h2><ol><li><p><strong>标签</strong>由英文尖括号<code>&lt;</code>和<code>&gt;</code>括起来，如<code>&lt;html&gt;</code>就是一个标签。</p></li><li><p>html中的标签一般都是成对出现的，分<strong>开始标签</strong>和<strong>结束标签</strong>。结束标签比开始标签多了一个<code>/</code>。</p><p>如：</p><p>（1） <code>&lt;p&gt;&lt;/p&gt;</code></p><p>（2） <code>&lt;div&gt;&lt;/div&gt;</code></p><p>（3） <code>&lt;span&gt;&lt;/span&gt;</code></p></li><li><p>标签与标签之间是可以嵌套的，但先后顺序必须保持一致，如：<code>&lt;div&gt;</code> 里嵌套<code>&lt;p&gt;</code> ，那么<code>&lt;/p&gt;</code> 必须放在<code>&lt;/div&gt;</code> 的前面。</p></li><li><p>HTML标签不区分大小写，<code>&lt;h1&gt;</code>和<code>&lt;H1&gt;</code>是一样的，但建议小写，因为大部分程序员都以小写为准。 </p></li></ol><h2 id="什么是语义化"><a href="#什么是语义化" class="headerlink" title="什么是语义化"></a>什么是语义化</h2><blockquote><p>语义化，让你的网页更好的被搜索引擎理解</p></blockquote><p>语义化：明白每个标签的用途（在什么情况下使用此标签合理）</p><p>比如，网页上的文章的<strong>标题</strong>就可以用标题标签，网页上的各个栏目的<strong>栏目名称</strong>也可以使用标题标签。文章中内容的段落就得放在<strong>段落标签</strong>中等等。</p><p><strong>语义化好处：</strong> </p><ol><li>更容易被搜索引擎收录。</li><li>更容易让屏幕阅读器读出网页内容。</li></ol><h1 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h1><h2 id="lt-head-gt-标签"><a href="#lt-head-gt-标签" class="headerlink" title="&lt;head&gt; 标签"></a><code>&lt;head&gt;</code> 标签</h2><p>文档的头部描述了文档的各种属性和信息，包括文档的标题等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</p><blockquote><p>下面这些标签可用在 head 部分：</p></blockquote><pre><code>&lt;head&gt;    &lt;title&gt;...&lt;/title&gt;    &lt;meta&gt;    &lt;link&gt;    &lt;style&gt;...&lt;/style&gt;    &lt;script&gt;...&lt;/script&gt;&lt;/head&gt;</code></pre><h2 id="lt-title-gt-标签"><a href="#lt-title-gt-标签" class="headerlink" title="&lt;title&gt;标签"></a><code>&lt;title&gt;</code>标签</h2><p>在<code>&lt;title&gt;</code> 和<code>&lt;/title&gt;</code> 标签之间的文字内容是网页的标题信息，它会出现在浏览器的标题栏中。网页的title标签用于告诉用户和搜索引擎这个网页的主要内容是什么，搜索引擎可以通过网页标题，迅速的判断出网页的主题。每个网页的内容都是不同的，每个网页都应该有一个独一无二的title。</p><blockquote><p>举例：</p></blockquote><pre><code>&lt;head&gt;    &lt;title&gt;hello world&lt;/title&gt;&lt;/head&gt;</code></pre><p><code>&lt;title&gt;</code>标签的内容“hello world”会在浏览器中的标题栏上显示出来。</p><h2 id="lt-body-gt-标签"><a href="#lt-body-gt-标签" class="headerlink" title="&lt;body&gt; 标签"></a><code>&lt;body&gt;</code> 标签</h2><p><code>&lt;body&gt;</code> 标签，网页上显示的内容放在这里</p><h2 id="lt-p-gt-标签"><a href="#lt-p-gt-标签" class="headerlink" title="&lt;p&gt; 标签"></a><code>&lt;p&gt;</code> 标签</h2><p><code>&lt;p&gt;</code> 标签，把文章的段落放在这里</p><p><strong>语法：</strong></p><p><code>&lt;p&gt;段落文本&lt;/p&gt;</code></p><p> <strong>注意：</strong></p><p> <code>&lt;p&gt;</code>标签，如在一篇新闻文章中有3段文字，就要把这3个段落分别放到<strong>3</strong>个<code>&lt;p&gt;</code>标签中。</p><h2 id="lt-hx-gt-标签"><a href="#lt-hx-gt-标签" class="headerlink" title="&lt;hx&gt; 标签"></a><code>&lt;hx&gt;</code> 标签</h2><p><code>&lt;hx&gt;</code>，把文章的标题放在里面</p><p><strong>语法：</strong></p><p><code>&lt;hx&gt;标题文本&lt;/hx&gt;</code> (x为1-6)。</p><p>标题标签的样式都会加粗，<code>h1</code>标签字号最大，<code>h2</code>标签字号相对h1要小，以此类推<code>h6</code>标签的字号最小。 并且依据重要性递减。<code>&lt;h1&gt;</code>是最高的等级。 </p><pre><code>&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h3&gt;三级标题&lt;/h3&gt;&lt;h4&gt;四级标题&lt;/h4&gt;&lt;h5&gt;五级标题&lt;/h5&gt;&lt;h6&gt;六级标题&lt;/h6&gt;</code></pre><h2 id="lt-div-gt-标签"><a href="#lt-div-gt-标签" class="headerlink" title="&lt;div&gt; 标签"></a><code>&lt;div&gt;</code> 标签</h2><p><code>&lt;div&gt;</code> 元素是块级元素，它是可用于组合其他 HTML 元素的容器。</p><p><code>&lt;div&gt;</code> 标签是<strong>没有语义</strong>的。可用于对大的内容块设置样式属性。</p><blockquote><p><code>&lt;div&gt;</code> 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 <code>&lt;table&gt;</code> 元素进行文档布局不是表格的正确用法。<code>&lt;table&gt;</code> 元素的作用是显示表格化的数据。</p></blockquote><h2 id="lt-span-gt-标签"><a href="#lt-span-gt-标签" class="headerlink" title="&lt;span&gt; 标签"></a><code>&lt;span&gt;</code> 标签</h2><p>使用<code>&lt;span&gt;</code>标签为文字设置单独样式，可用作文本的容器。</p><p><code>&lt;span&gt;</code>标签是<strong>没有语义</strong>的，它的作用就是为了<strong>设置单独的样式</strong>用的。 </p><h2 id="lt-q-gt-标签"><a href="#lt-q-gt-标签" class="headerlink" title="&lt;q&gt; 标签"></a><code>&lt;q&gt;</code> 标签</h2><p>使用<code>&lt;q&gt;</code>标签对<strong>短文本</strong>引用</p><p><strong>语法：</strong></p><p><code>&lt;q&gt;引用文本&lt;/q&gt;</code></p><p><strong>注意：</strong> </p><p>要引用的文本不用加<strong>双引号</strong>，浏览器会对q标签自动添加双引号。 </p><h2 id="lt-blockquote-gt-标签"><a href="#lt-blockquote-gt-标签" class="headerlink" title="&lt;blockquote&gt; 标签"></a><code>&lt;blockquote&gt;</code> 标签</h2><p><code>&lt;blockquote&gt;</code> 标签对<strong>长文本</strong>引用，如在文章中引入大段某知名作家的文字，这时需要这个标签。</p><p><strong>语法:</strong></p><p><code>&lt;blockquote&gt;引用文本&lt;/blockquote&gt;</code></p><p><strong>注意：</strong> </p><p>要引用的文本不用加<strong>双引号</strong>，浏览器会对blockquote标签自动添加双引号。 </p><h2 id="lt-br-gt-标签"><a href="#lt-br-gt-标签" class="headerlink" title="&lt;br&gt; 标签"></a><code>&lt;br&gt;</code> 标签</h2><p>使用<code>&lt;br&gt;</code> 标签分行显示文本</p><blockquote><p><strong>在 html 代码中输入回车、空格都是没有作用的。在html文本中想输入回车换行，就必须输入<code>&lt;br /&gt;</code> 。</strong> </p></blockquote><p><strong>语法：</strong></p><p>xhtml1.0写法(推荐)：<code>&lt;br /&gt;</code></p><p>html4.01写法：<code>&lt;br&gt;</code></p><p><strong>举例：</strong> </p><pre><code>&lt;h2&gt;《咏桂》&lt;/h2&gt;&lt;p&gt;暗淡轻黄体性柔，&lt;br /&gt;情疏迹远只香留。&lt;br /&gt;何须浅碧深红色，&lt;br /&gt;自是花中第一流。&lt;/p&gt;</code></pre><p><strong>空格：</strong> </p><p>在html代码中输入空格是不起作用的 </p><p><strong>语法：</strong></p><p><code>&amp;nbsp;</code></p><h2 id="lt-hr-gt-标签"><a href="#lt-hr-gt-标签" class="headerlink" title="&lt;hr&gt; 标签"></a><code>&lt;hr&gt;</code> 标签</h2><p><code>&lt;hr&gt;</code> 标签，添加水平横线</p><p><strong>语法：</strong></p><p>html4.01版本 ：<code>&lt;hr&gt;</code></p><p>xhtml1.0版本(推荐)：<code>&lt;hr /&gt;</code></p><p><strong>注意：</strong></p><p><code>&lt;hr /&gt;</code>标签和<code>&lt;br /&gt;</code>标签一样也是一个<strong>空标签</strong>，所以只有一个开始标签，没有结束标签。</p><h2 id="lt-address-gt-标签"><a href="#lt-address-gt-标签" class="headerlink" title="&lt;address&gt; 标签"></a><code>&lt;address&gt;</code> 标签</h2><p> <code>&lt;address&gt;</code> 标签，为网页加入地址信息（比如电子邮件地址）、签名或者文档的作者身份。在浏览器上显示的样式为<strong><em>斜体</em></strong> </p><p><strong>语法：</strong></p><p><code>&lt;address&gt;联系地址信息&lt;/address&gt;</code></p><p><strong>举例：</strong> </p><p><code>&lt;address&gt;地址：XXX省XXX市XXX街道XXX号&lt;/address&gt;</code></p><pre><code>&lt;address&gt;本文的作者：&lt;a href=&quot;mailto:gaotf@gaotf.tk&quot;&gt;lilian&lt;/a&gt;&lt;/address&gt;</code></pre><h2 id="lt-code-gt-标签"><a href="#lt-code-gt-标签" class="headerlink" title="&lt;code&gt; 标签"></a><code>&lt;code&gt;</code> 标签</h2><p>使用<code>&lt;code&gt;</code> 标签，加入一行代码</p><p><code>&lt;code&gt;var i=i+300;&lt;/code&gt;</code></p><p>注意：在文章中一般如果要插入<strong>多行代码</strong>时使用<code>&lt;pre&gt;</code> 标签。</p><p><strong>语法：</strong></p><p><code>&lt;code&gt;代码语言&lt;/code&gt;</code></p><h2 id="lt-pre-gt-标签"><a href="#lt-pre-gt-标签" class="headerlink" title="&lt;pre&gt; 标签"></a><code>&lt;pre&gt;</code> 标签</h2><p>使用<code>&lt;pre&gt;</code> 标签，加入大段代码</p><p><strong>语法：</strong></p><p><code>&lt;pre&gt;语言代码段&lt;/pre&gt;</code></p><h2 id="lt-ul-gt-标签"><a href="#lt-ul-gt-标签" class="headerlink" title="&lt;ul&gt;标签"></a><code>&lt;ul&gt;</code>标签</h2><p><code>&lt;ul&gt;</code> 是<strong>没有前后顺序</strong>的信息列表。 </p><p><strong>语法：</strong></p><pre><code>&lt;ul&gt;  &lt;li&gt;信息1&lt;/li&gt;  &lt;li&gt;信息2&lt;/li&gt;   ......&lt;/ul&gt;</code></pre><p><strong>举例：</strong></p><ul><br>  <li>信息1</li><br>  <li>信息2</li><br></ul><h2 id="lt-ol-gt-标签"><a href="#lt-ol-gt-标签" class="headerlink" title="&lt;ol&gt;标签"></a><code>&lt;ol&gt;</code>标签</h2><p><code>&lt;ol&gt;</code>标签来制作<strong>有序列表</strong>来展示。</p><p><strong>语法：</strong></p><pre><code>&lt;ol&gt;   &lt;li&gt;信息1&lt;/li&gt;   &lt;li&gt;信息2&lt;/li&gt;   ......&lt;/ol&gt;</code></pre><p><strong>举例：</strong></p><ol><br>   <li>信息1</li><br>   <li>信息2</li><br></ol><h2 id="lt-div-gt-标签-1"><a href="#lt-div-gt-标签-1" class="headerlink" title="&lt;div&gt; 标签"></a><code>&lt;div&gt;</code> 标签</h2><p>在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个<code>&lt;div&gt;</code>标签中，这个<code>&lt;div&gt;</code> 标签的作用就相当于一个容器。</p><p><strong>语法：</strong></p><p><code>&lt;div&gt;…&lt;/div&gt;</code></p><p><strong>确定逻辑部分：</strong></p><p>什么是逻辑部分？它是页面上相互关联的一组元素。如网页中的独立的<strong>栏目版块</strong>，就是一个典型的逻辑部分。</p><p><strong>给div命名，使逻辑更加清晰</strong></p><p>为了使逻辑更加清晰，我们可以为这一个独立的逻辑部分设置一个名称，用<code>id</code>属性来为<code>&lt;div&gt;</code>提供唯一的名称。</p><p> <strong>语法：</strong></p><p><code>&lt;div  id=&quot;版块名称&quot;&gt;…&lt;/div&gt;</code></p><h2 id="lt-table-gt-标签"><a href="#lt-table-gt-标签" class="headerlink" title="&lt;table&gt; 标签"></a><code>&lt;table&gt;</code> 标签</h2><p><code>&lt;table&gt;</code> 标签，创建表格</p><p>创建表格的四个元素：</p><p>table、tbody、tr、th、td</p><p>1、<code>&lt;table&gt;…&lt;/table&gt;</code>：整个表格以<code>&lt;table&gt;</code>标记开始、<code>&lt;/table&gt;</code>标记结束。</p><p>2、<code>&lt;tbody&gt;…&lt;/tbody&gt;</code>：如果不加<code>&lt;thead&gt;&lt;tbody&gt;&lt;tfooter&gt;</code> , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。</p><p>3、<code>&lt;tr&gt;…&lt;/tr&gt;</code>：表格的一行，所以有几对tr 表格就有几行。</p><p>4、<code>&lt;td&gt;…&lt;/td&gt;</code>：表格的一个单元格，一行中包含几对<code>&lt;td&gt;...&lt;/td&gt;</code>，说明一行中就有几列。</p><p>5、<code>&lt;th&gt;…&lt;/th&gt;</code>：表格的头部的一个单元格，<strong>表格表头。</strong>文本默认为<strong>粗体</strong>并且<strong>居中</strong>显示 。</p><p>6、表格中列的个数，取决于一行中数据单元格的个数。</p><h2 id="lt-caption-gt-标签"><a href="#lt-caption-gt-标签" class="headerlink" title="&lt;caption&gt; 标签"></a><code>&lt;caption&gt;</code> 标签</h2><p><code>&lt;caption&gt;</code> 标签，为表格添加<strong>标题</strong>和<strong>摘要</strong></p><p><strong>摘要</strong></p><p>摘要的内容是不会在浏览器中显示出来的。它的作用是增加表格的可读性(语义化)，使搜索引擎更好的读懂表格内容，还可以使屏幕阅读器更好的帮助特殊用户读取表格内容。</p><p>​    <strong>语法：</strong><code>&lt;table summary=&quot;表格简介文本&quot;&gt;</code></p><p><strong>标题</strong></p><p>用以描述表格内容，标题的显示位置：表格上方。</p><p>​     <strong>语法：</strong></p><pre><code>&lt;table&gt;    &lt;caption&gt;标题文本&lt;/caption&gt;    &lt;tr&gt;        &lt;td&gt;…&lt;/td&gt;        &lt;td&gt;…&lt;/td&gt;        …    &lt;/tr&gt;…&lt;/table&gt;</code></pre><h2 id="lt-a-gt-标签"><a href="#lt-a-gt-标签" class="headerlink" title="&lt;a&gt; 标签"></a><code>&lt;a&gt;</code> 标签</h2><p>使用<code>&lt;a&gt;</code>标签可实现超链接，它在网页制作中可以说是无处不在，只要有链接的地方，就会有这个标签。</p><p><strong>语法：</strong></p><pre><code>&lt;a  href=&quot;目标网址&quot;  title=&quot;鼠标滑过显示的文本&quot;&gt;链接显示的文本&lt;/a&gt;</code></pre><p><strong>例如：</strong></p><pre><code>&lt;a  href=&quot;https://gaotf.tk&quot;  title=&quot;点击进入i-Share&quot;&gt;click here!&lt;/a&gt;</code></pre><p>上面例子作用是单击<a href="https://gaotf.tk" title="点击进入i-Share">click here!</a>文字，网页链接到<code>https://gaotf.tk</code>这个网页。</p><h3 id="target-属性："><a href="#target-属性：" class="headerlink" title="target 属性："></a>target 属性：</h3><blockquote><p>语法：</p></blockquote><p><code>&lt;a href=&quot;目标网址&quot; target=&quot;目标网址的打开方式&quot;&gt;click here!&lt;/a&gt;</code></p><table><thead><tr><th style="text-align:left">属性值</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">blank</td><td style="text-align:left">在新窗口打开目标网址</td></tr><tr><td style="text-align:left">self</td><td style="text-align:left">在当前窗口打开目标网址</td></tr><tr><td style="text-align:left">top</td><td style="text-align:left">在顶层框架打开目标网址</td></tr><tr><td style="text-align:left">parent</td><td style="text-align:left">在当前框架打开目标网址</td></tr></tbody></table><h3 id="name-属性"><a href="#name-属性" class="headerlink" title="name 属性:"></a><a name="back">name 属性:</a></h3><p>name 属性规定锚（anchor）的名称。</p><p>您可以使用 name 属性创建 HTML 页面中的书签。</p><p>书签不会以任何特殊方式显示，它对读者是不可见的。</p><p>当使用命名锚（named anchors）时，我们可以创建直接跳至该命名锚（比如页面中某个小节）的链接，这样使用者就无需不停地滚动页面来寻找他们需要的信息了。</p><blockquote><p>命名锚的语法：</p></blockquote><pre><code>&lt;a name=&quot;label&quot;&gt;锚（显示在页面上的文本）&lt;/a&gt;</code></pre><p>提示：锚的名称可以是任何你喜欢的名字。</p><p>提示：您可以使用 id 属性来替代 name 属性，命名锚同样有效。</p><blockquote><p>举例</p></blockquote><p>首先，我们在 HTML 文档中对锚进行命名（创建一个书签）：</p><pre><code>&lt;a name=&quot;back&quot;&gt;name属性&lt;/a&gt;</code></pre><p>然后，我们在同一个文档中创建指向该锚的链接：</p><pre><code>&lt;a href=&quot;#back&quot;&gt;返回“name属性”&lt;/a&gt;</code></pre><p>您也可以在其他页面中创建指向该锚的链接：</p><pre><code>&lt;a href=&quot;https://gaotf.tk#back&quot;&gt;返回“name属性”&lt;/a&gt;</code></pre><p>在上面的代码中，我们将 # 符号和锚名称添加到 URL 的末端，就可以直接链接到 tips 这个命名锚了。</p><blockquote><p>完整代码</p></blockquote><pre><code>&lt;body&gt;    ···    &lt;h2&gt;&lt;a name=&quot;back&quot;&gt;name属性&lt;/a&gt;&lt;/h2&gt;    ···    ···    &lt;p&gt;具体效果：&lt;a href=&quot;#back&quot;&gt;返回“name属性&quot;&lt;/a&gt;&lt;/p&gt;    ···&lt;/body&gt;</code></pre><p>具体效果：<a href="#back">返回“name属性“</a></p><h3 id="链接Email地址"><a href="#链接Email地址" class="headerlink" title="链接Email地址"></a>链接Email地址</h3><p><code>&lt;a&gt;</code>标签还有一个作用是可以链接Email地址，使用mailto能让访问者便捷向网站管理者发送电子邮件。我们还可以利用<code>mailto</code>做许多其它事情。下面一一进行讲解，请看详细图示：</p><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:center">属性值</th><th>举例</th></tr></thead><tbody><tr><td style="text-align:left">收件邮箱</td><td style="text-align:center">mailto:</td><td><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk&gt;发送邮件&lt;/a&gt;</code></td></tr><tr><td style="text-align:left">抄送地址</td><td style="text-align:center">cc=</td><td><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk?cc=lisi@gaotf.tk&quot;&gt;发送邮件&lt;/a&gt;</code></td></tr><tr><td style="text-align:left">密件抄送</td><td style="text-align:center">bcc=</td><td><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk?bcc=wanger@gaotf.tk&quot;&gt;发送邮件&lt;/a&gt;</code></td></tr><tr><td style="text-align:left">多收件人</td><td style="text-align:center">;</td><td><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk;lisi@gaotf.tk&quot;&gt;发送邮件&lt;/a&gt;</code></td></tr><tr><td style="text-align:left">邮件主题</td><td style="text-align:center">subject=</td><td><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk?subject=代码演示&quot;&gt;发送邮件&lt;/a&gt;</code></td></tr><tr><td style="text-align:left">邮件内容</td><td style="text-align:center">body=</td><td><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk?body=邮件内容&quot;&gt;发送邮件&lt;/a&gt;</code></td></tr></tbody></table><p><strong>注意</strong>：如果mailto后面同时有多个参数的话，第一个参数必须以“<code>?</code>”开头，后面的参数每一个都以“<code>&amp;</code>”分隔。</p><p>下面是一个完整的实例:</p><pre><code>&lt;a href=&quot;mailto:zhangsan@gaotf.tk?cc=lisi@gaotf.tk&amp;bcc=wanger@gaotf.tk&amp;subject=代码演示&amp;body=这里是邮件的内容&quot;&gt;发送邮件&lt;/a&gt;</code></pre><p>在浏览器中显示的结果：</p><p><a href="mailto:zhangsan@gaotf.tk?cc=lisi@gaotf.tk&bcc=wanger@gaotf.tk&subject=代码演示&body=这里是邮件的内容">发送邮件</a></p><p>点击链接会打开电子邮件应用，并自动填写收件人等设置好的信息，如下图：</p><p>&lt;img src=”<a href="https://i.loli.net/2018/05/25/5b080c59550a6.png&quot;" target="_blank" rel="noopener">https://i.loli.net/2018/05/25/5b080c59550a6.png&quot;</a> alt=”邮件代码演示图片”title =”邮件演示”&gt;</p><h2 id="lt-img-gt-标签"><a href="#lt-img-gt-标签" class="headerlink" title="&lt;img&gt; 标签"></a><code>&lt;img&gt;</code> 标签</h2><p>使用<code>&lt;img&gt;</code>标签来插入图片。</p><p><strong>语法：</strong></p><p><code>&lt;img src=&quot;图片地址&quot; alt=&quot;下载失败时的替换文本&quot;title =&quot;提示文本&quot;&gt;</code></p><p><strong>举例：</strong></p><p><code>&lt;img src=&quot;myimage.gif&quot; alt=&quot;My Image&quot; title=&quot;My Image&quot;/&gt;</code></p><p><code>&lt;img src=&quot;https://i.loli.net/2018/05/25/5b08142ae3706.jpg&quot; alt=&quot;章首图&quot; title=&quot;我的文章配图&quot;/&gt;</code></p><p><strong>讲解：</strong></p><p><strong>1、src：</strong>标识图像的位置；</p><p><strong>2、alt：</strong>指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本；</p><p><strong>3、title：</strong>提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</p><p><strong>4、</strong>图像可以是GIF，PNG，JPEG格式的图像文件。</p><h2 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h2><p><strong>代码注释的作用</strong>是帮助程序员标注代码的用途，过一段时间后再看你所编写的代码，就能很快想起这段代码的用途。</p><p><strong>代码注释</strong>不仅方便程序员自己回忆起以前代码的用途，还可以帮助其他程序员很快的读懂你的程序的功能，方便多人合作开发网页代码。</p><p><strong>语法：</strong><code>&lt;!--注释文字 --&gt;</code></p>]]></content>
      
      <categories>
          
          <category> HTML </category>
          
          <category> 学习笔记 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HTML学习笔记（1）</title>
      <link href="/33415b1e/"/>
      <url>/33415b1e/</url>
      <content type="html"><![CDATA[<h1 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h1><h2 id="HTML是什么"><a href="#HTML是什么" class="headerlink" title="HTML是什么"></a>HTML是什么</h2><p>HTML 是用来描述网页的一种语言。</p><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)</li><li>HTML 不是一种编程语言，而是一种<strong>标记语言</strong> (markup language)</li><li>标记语言是一套<strong>标记标签</strong> (markup tag)</li><li>HTML 使用<strong>标记标签</strong>来描述网页</li></ul><h2 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h2><p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)。</p><ul><li>HTML 标签是由<strong>尖括号</strong>包围的关键词，比如  <html></html></li><li>HTML 标签通常是<strong>成对出现</strong>的，比如  <b> 和 </b></li><li>标签对中的第一个标签是<strong>开始标签</strong>，第二个标签是<strong>结束标签</strong></li><li>开始和结束标签也被称为<strong>开放标签</strong>和<strong>闭合标签</strong></li></ul><h2 id="HTML-文档"><a href="#HTML-文档" class="headerlink" title="HTML 文档"></a>HTML 文档</h2><ul><li>HTML 文档<strong>描述网页</strong></li><li>HTML 文档包含 <strong>HTML 标签</strong>和纯文本</li><li>HTML 文档也被称为<strong>网页</strong></li></ul><p>Web 浏览器的作用是读取 HTML 文档，并以网页的形式显示出它们。浏览器不会显示 HTML 标签，而是使用标签来解释页面的内容：</p><pre><code>&lt;html&gt;&lt;body&gt;&lt;h1&gt;我的第一个标题&lt;/h1&gt;&lt;p&gt;我的第一个段落。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><blockquote><p>例子解释</p></blockquote><ul><li><code>&lt;html&gt; 与 &lt;/html&gt;</code> 之间的文本描述网页</li><li><code>&lt;body&gt; 与 &lt;/body&gt;</code> 之间的文本是可见的页面内容</li><li><code>&lt;h1&gt; 与 &lt;/h1&gt;</code> 之间的文本被显示为标题</li><li><code>&lt;p&gt; 与 &lt;/p&gt;</code> 之间的文本被显示为段落</li></ul><h1 id="元素简介"><a href="#元素简介" class="headerlink" title="元素简介"></a>元素简介</h1><p>HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p><table><thead><tr><th>开始标签</th><th>元素内容</th><th>结束标签</th></tr></thead><tbody><tr><td><code>&lt;p&gt;</code></td><td><code>This is a paragraph</code></td><td><code>&lt;/p&gt;</code></td></tr><tr><td><code>&lt;a href=&quot;default.htm&quot; &gt;</code></td><td><code>This is a link</code></td><td><code>&lt;/a&gt;</code></td></tr><tr><td><code>&lt;br /&gt;</code></td><td></td><td><code>无</code></td></tr></tbody></table><p>注释：开始标签常被称为开放标签（opening tag），结束标签常称为闭合标签（closing tag）。</p><h2 id="元素语法"><a href="#元素语法" class="headerlink" title="元素语法"></a>元素语法</h2><ul><li>HTML 元素以<strong>开始标签</strong>起始</li><li>HTML 元素以<strong>结束标签</strong>终止</li><li><strong>元素的内容</strong>是开始标签与结束标签之间的内容</li><li>某些 HTML 元素具有<strong>空内容（empty content）</strong></li><li>空元素<strong>在开始标签中进行关闭</strong>（以开始标签的结束而结束）</li><li>大多数 HTML 元素可拥有<strong>属性</strong></li></ul><h2 id="元素嵌套"><a href="#元素嵌套" class="headerlink" title="元素嵌套"></a>元素嵌套</h2><p>大多数 HTML 元素可以嵌套（可以包含其他 HTML 元素）。</p><p>HTML 文档由嵌套的 HTML 元素构成。</p><blockquote><p>HTML 文档实例</p></blockquote><pre><code>&lt;html&gt;&lt;body&gt;&lt;p&gt;This is my first paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>上面的例子包含三个 HTML 元素。</p><h2 id="实例解释"><a href="#实例解释" class="headerlink" title="实例解释"></a>实例解释</h2><blockquote><p><code>&lt;p&gt;</code> 元素：</p></blockquote><pre><code>&lt;p&gt;This is my first paragraph.&lt;/p&gt;</code></pre><p>这个 <code>&lt;p&gt;</code> 元素定义了 HTML 文档中的一个段落。</p><p>这个元素拥有一个开始标签 <code>&lt;p&gt;</code>，以及一个结束标签 <code>&lt;/p&gt;</code>。</p><p>元素内容是：This is my first paragraph。</p><blockquote><p><code>&lt;body&gt;</code> 元素：</p></blockquote><pre><code>&lt;body&gt;&lt;p&gt;This is my first paragraph.&lt;/p&gt;&lt;/body&gt;</code></pre><p><code>&lt;body&gt;</code> 元素定义了 HTML 文档的主体。</p><p>这个元素拥有一个开始标签 <code>&lt;body&gt;</code>，以及一个结束标签 <code>&lt;/body&gt;</code>。</p><p>元素内容是另一个 HTML 元素（p 元素）。</p><blockquote><p><code>&lt;html&gt;</code> 元素：</p></blockquote><pre><code>&lt;html&gt;&lt;body&gt;&lt;p&gt;This is my first paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><code>&lt;html&gt;</code> 元素定义了整个 HTML 文档。</p><p>这个元素拥有一个开始标签 <code>&lt;html&gt;</code>，以及一个结束标签 <code>&lt;/html&gt;</code> 。</p><p>元素内容是另一个 HTML 元素（body 元素）。</p><h2 id="结束标签"><a href="#结束标签" class="headerlink" title="结束标签"></a>结束标签</h2><p>即使您忘记了使用结束标签，大多数浏览器也会正确地显示 HTML：</p><pre><code>&lt;p&gt;This is a paragraph&lt;p&gt;This is a paragraph</code></pre><p>上面的例子在大多数浏览器中都没问题，但不要依赖这种做法。忘记使用结束标签会产生不可预料的结果或错误。</p><p>注释：未来的 HTML 版本不允许省略结束标签。</p><h2 id="空的元素"><a href="#空的元素" class="headerlink" title="空的元素"></a>空的元素</h2><p>没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。</p><p><code>&lt;br&gt;</code> 就是没有关闭标签的空元素（<code>&lt;br&gt;</code>标签定义换行）。</p><p>在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。</p><p>在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。</p><p>即使 <code>&lt;br&gt;</code> 在所有浏览器中都是有效的，但使用 <code>&lt;br /&gt;</code> 其实是更长远的保障。</p><h1 id="属性简介"><a href="#属性简介" class="headerlink" title="属性简介"></a>属性简介</h1><p>HTML 标签可以拥有<strong>属性</strong>。属性提供了有关 HTML 元素的<strong>更多的信息</strong>。</p><p>属性总是以名称/值对的形式出现，比如：<strong>name=”value”</strong>。</p><p>属性总是在 HTML 元素的<strong>开始标签</strong>中规定。</p><h2 id="属性实例"><a href="#属性实例" class="headerlink" title="属性实例"></a>属性实例</h2><p>HTML 链接由 <code>&lt;a&gt;</code> 标签定义。链接的地址在 href 属性中指定：</p><pre><code>&lt;a href=&quot;http://gaoytf.tk&quot;&gt;This is a link&lt;/a&gt;</code></pre><blockquote><p>属性例子 1:</p></blockquote><p><code>&lt;h1&gt;</code> 定义标题的开始。</p><p><code>&lt;h1 align=&quot;center&quot;&gt;</code> 拥有关于对齐方式的附加信息。</p><blockquote><p>属性例子 2:</p></blockquote><p><code>&lt;body&gt;</code> 定义 HTML 文档的主体。</p><p><code>&lt;body bgcolor=&quot;yellow&quot;&gt;</code> 拥有关于背景颜色的附加信息。</p><blockquote><p>属性例子 3:</p></blockquote><p><code>&lt;table&gt;</code> 定义 HTML 表格。</p><p><code>&lt;table border=&quot;1&quot;&gt;</code> 拥有关于表格边框的附加信息。</p><h2 id="属性小写"><a href="#属性小写" class="headerlink" title="属性小写"></a>属性小写</h2><p>属性和属性值对大小写<strong>不敏感</strong>。</p><p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p><p>而新版本的 (X)HTML 要求使用小写属性。</p><h2 id="属性值加引号"><a href="#属性值加引号" class="headerlink" title="属性值加引号"></a>属性值加引号</h2><p>属性值应该始终被包括在引号内。双引号是最常用的，不过使用单引号也没有问题。</p><p>在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：</p><pre><code>name=&#39;Bill &quot;HelloWorld&quot; Gates&#39;</code></pre><h1 id="HTML-标签-1"><a href="#HTML-标签-1" class="headerlink" title="HTML 标签"></a>HTML 标签</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>标题（Heading）是通过 <code>&lt;h1&gt; - &lt;h6&gt;</code> 等标签进行定义的。</p><p><code>&lt;h1&gt;</code> 定义最大的标题。<code>&lt;h6&gt;</code> 定义最小的标题。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;h1&gt;This is a heading&lt;/h1&gt;&lt;h2&gt;This is a heading&lt;/h2&gt;&lt;h3&gt;This is a heading&lt;/h3&gt;</code></pre><p>注释：</p><ol><li>浏览器会自动地在标题的前后添加空行。</li><li>默认情况下，HTML 会自动地在块级元素前后添加一个额外的空行，比如段落、标题元素前后。</li></ol><blockquote><p>标题很重要</p></blockquote><p>请确保将 HTML heading 标签只用于标题。不要仅仅是为了产生粗体或大号的文本而使用标题。</p><p>搜索引擎使用标题为您的网页的结构和内容编制索引。</p><p>因为用户可以通过标题来快速浏览您的网页，所以用标题来呈现文档结构是很重要的。</p><p>应该将 h1 用作主标题（最重要的），其后是 h2（次重要的），再其次是 h3，以此类推。</p><h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><p><code>&lt;hr /&gt;</code> 标签在 HTML 页面中创建水平线。</p><p>hr 元素可用于分隔内容。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;This is a paragraph&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;This is a paragraph&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;This is a paragraph&lt;/p&gt;</code></pre><p>提示：使用水平线 (<code>&lt;hr&gt;</code> 标签) 来分隔文章中的小节是一个办法（但并不是唯一的办法）。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。</p><p>注释是这样写的：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;!-- This is a comment --&gt;</code></pre><p>注释：开始括号之后（左边的括号）需要紧跟一个叹号，结束括号之前（右边的括号）不需要。</p><p>提示：合理地使用注释可以对未来的代码编辑工作产生帮助。</p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>段落是通过 <code>&lt;p&gt;</code> 标签定义的。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;This is a paragraph&lt;/p&gt;&lt;p&gt;This is another paragraph&lt;/p&gt;</code></pre><p>注释：浏览器会自动地在段落的前后添加空行。（<code>&lt;p&gt;</code> 是块级元素）</p><p>提示：使用空的段落标记 <code>&lt;p&gt;&lt;/p&gt;</code> 去插入一个空行是个坏习惯。用 <code>&lt;br /&gt;</code> 标签代替它！</p><h2 id="折行"><a href="#折行" class="headerlink" title="折行"></a>折行</h2><p>如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 <code>&lt;br /&gt;</code> 标签：</p><pre><code>&lt;p&gt;This is&lt;br /&gt;a para&lt;br /&gt;graph with line breaks&lt;/p&gt;</code></pre><p><code>&lt;br /&gt;</code> 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。</p><blockquote><p><code>&lt;br&gt;</code> 还是 <code>&lt;br /&gt;</code></p></blockquote><p>您也许发现 <code>&lt;br&gt;</code> 与 <code>&lt;br /&gt;</code> 很相似。</p><p>在 XHTML、XML 以及未来的 HTML 版本中，不允许使用没有结束标签（闭合标签）的 HTML 元素。</p><p>即使 <code>&lt;br&gt;</code> 在所有浏览器中的显示都没有问题，使用 <code>&lt;br /&gt;</code> 也是<strong>更长远的保障。</strong></p><h2 id="参考手册"><a href="#参考手册" class="headerlink" title="参考手册"></a>参考手册</h2><table><thead><tr><th>标签</th><th>描</th></tr></thead><tbody><tr><td><code>&lt;html&gt;</code></td><td>定义 HTML 文档</td></tr><tr><td><code>&lt;body&gt;</code></td><td>定义文档的主体</td></tr><tr><td><code>&lt;h1&gt; - &lt;h6&gt;</code></td><td>定义 HTML 标题</td></tr><tr><td><code>&lt;hr /&gt;</code></td><td>定义水平线</td></tr><tr><td><code>&lt;!--  xxxxx   --&gt;</code></td><td>定义注释</td></tr><tr><td><code>&lt;p&gt;</code></td><td>定义段落</td></tr><tr><td><code>&lt;br /&gt;</code></td><td>插入单个折行（换行）</td></tr></tbody></table><h1 id="HTML-样式"><a href="#HTML-样式" class="headerlink" title="HTML 样式"></a>HTML 样式</h1><h2 id="style-属性"><a href="#style-属性" class="headerlink" title="style 属性"></a>style 属性</h2><p>style 属性的作用：提供了一种改变所有 HTML 元素的样式的通用方法。</p><blockquote><p>不赞成使用的标签和属性</p></blockquote><p>在 HTML 4 中，有若干的标签和属性是被废弃的。被废弃（Deprecated）的意思是在未来版本的 HTML 和 XHTML 中将不支持这些标签和属性。</p><p>这里传达的信息很明确：请避免使用这些被废弃的标签和属性！</p><blockquote><p>避免使用下面这些标签和属性</p></blockquote><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;center&gt;</code></td><td><code>定义居中的内容。</code></td></tr><tr><td><code>&lt;font&gt; 和 &lt;basefont&gt;</code></td><td><code>定义 HTML 字体。</code></td></tr><tr><td><code>&lt;s&gt; 和 &lt;strike&gt;</code></td><td><code>定义删除线文本</code></td></tr><tr><td><code>&lt;u&gt;</code></td><td><code>定义下划线文本</code></td></tr><tr><td><strong>属性</strong></td><td><strong>描述</strong></td></tr><tr><td><code>align</code></td><td><code>定义文本的对齐方式</code></td></tr><tr><td><code>bgcolor</code></td><td><code>定义背景颜色</code></td></tr><tr><td><code>color</code></td><td><code>定义文本颜色</code></td></tr></tbody></table><p>对于以上这些标签和属性：请使用样式代替！</p><h2 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h2><p>background-color 属性为元素定义了背景颜色：</p><pre><code>&lt;html&gt;&lt;body style=&quot;background-color:yellow&quot;&gt;&lt;h2 style=&quot;background-color:red&quot;&gt;This is a heading&lt;/h2&gt;&lt;p style=&quot;background-color:green&quot;&gt;This is a paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>style 属性淘汰了“旧的” bgcolor 属性。</p><h2 id="字体、颜色和尺寸"><a href="#字体、颜色和尺寸" class="headerlink" title="字体、颜色和尺寸"></a>字体、颜色和尺寸</h2><p>font-family、color 以及 font-size 属性分别定义元素中文本的字体系列、颜色和字体尺寸：</p><pre><code>&lt;html&gt;&lt;body&gt;&lt;h1 style=&quot;font-family:verdana&quot;&gt;A heading&lt;/h1&gt;&lt;p style=&quot;font-family:arial;color:red;font-size:20px;&quot;&gt;A paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>style 属性淘汰了旧的 <code>&lt;font&gt;</code> 标签。</p><h2 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h2><p>text-align 属性规定了元素中文本的水平对齐方式：</p><pre><code>&lt;html&gt;&lt;body&gt;&lt;h1 style=&quot;text-align:center&quot;&gt;This is a heading&lt;/h1&gt;&lt;p&gt;The heading above is aligned to the center of this page.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>style 属性淘汰了旧的 “align” 属性。</p><h2 id="文本格式化"><a href="#文本格式化" class="headerlink" title="文本格式化"></a>文本格式化</h2><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;b&gt;</code></td><td><code>定义粗体文本。</code></td></tr><tr><td><code>&lt;big&gt;</code></td><td><code>定义大号字。</code></td></tr><tr><td><code>&lt;em&gt;</code></td><td><code>定义着重文字。</code></td></tr><tr><td><code>&lt;i&gt;</code></td><td><code>定义斜体字。</code></td></tr><tr><td><code>&lt;small&gt;</code></td><td><code>定义小号字。</code></td></tr><tr><td><code>&lt;strong&gt;</code></td><td><code>定义加重语气。</code></td></tr><tr><td><code>&lt;sub&gt;</code></td><td><code>定义下标字。</code></td></tr><tr><td><code>&lt;sup&gt;</code></td><td><code>定义上标字。</code></td></tr><tr><td><code>&lt;ins&gt;</code></td><td><code>定义插入字。</code></td></tr><tr><td><code>&lt;del&gt;</code></td><td><code>定义删除字。</code></td></tr><tr><td><code>&lt;s&gt;</code></td><td><code>*不赞成使用。*使用 &lt;del&gt; 代替。</code></td></tr><tr><td><code>&lt;strike&gt;</code></td><td><code>*不赞成使用。*使用 &lt;del&gt; 代替。</code></td></tr><tr><td><code>&lt;u&gt;</code></td><td><code>*不赞成使用。*使用样式（style）代替。</code></td></tr></tbody></table><h1 id="计算机代码"><a href="#计算机代码" class="headerlink" title="计算机代码"></a>计算机代码</h1><h2 id="计算机代码格式"><a href="#计算机代码格式" class="headerlink" title="计算机代码格式"></a>计算机代码格式</h2><p>通常，HTML 使用<strong>可变</strong>的字母尺寸，以及可变的字母间距。</p><p>在显示<strong>计算机代码</strong>示例时，并不需要如此。</p><p><code>&lt;kbd&gt;, &lt;samp&gt;, 以及 &lt;code&gt;</code> 元素全都支持固定的字母尺寸和间距。</p><h2 id="键盘格式"><a href="#键盘格式" class="headerlink" title="键盘格式"></a>键盘格式</h2><p>HTML <code>&lt;kbd&gt;</code> 元素定义<em>键盘输入</em>：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;To open a file, select:&lt;/p&gt;&lt;p&gt;&lt;kbd&gt;File | Open...&lt;/kbd&gt;&lt;/p&gt;</code></pre><h2 id="样本格式"><a href="#样本格式" class="headerlink" title="样本格式"></a>样本格式</h2><p>HTML <code>&lt;samp&gt;</code>元素定义<strong>计算机输出示例</strong>：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;samp&gt;demo.example.com login: Apr 12 09:10:17Linux 2.6.10-grsec+gg3+e+fhs6b+nfs+gr0501+++p3+c4a+gr2b-reslog-v6.189&lt;/samp&gt;</code></pre><h2 id="代码格式"><a href="#代码格式" class="headerlink" title="代码格式"></a>代码格式</h2><p>HTML <code>&lt;code&gt;</code> 元素定义<em>编程代码示例</em>：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;code&gt;var person = { firstName:&quot;Bill&quot;, lastName:&quot;Gates&quot;, age:50, eyeColor:&quot;blue&quot; }&lt;/code&gt;</code></pre><p><code>&lt;code&gt;</code> 元素<strong>不保留</strong>多余的<strong>空格</strong>和<strong>折行</strong>：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;Coding Example:&lt;/p&gt;&lt;code&gt;var person = {    firstName:&quot;Bill&quot;,    lastName:&quot;Gates&quot;,    age:50,    eyeColor:&quot;blue&quot;}&lt;/code&gt;</code></pre><p>如需解决该问题，您必须在 <code>&lt;pre&gt;</code> 元素中包围代码：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;Coding Example:&lt;/p&gt;&lt;code&gt;&lt;pre&gt;var person = {    firstName:&quot;Bill&quot;,    lastName:&quot;Gates&quot;,    age:50,    eyeColor:&quot;blue&quot;}&lt;/pre&gt;&lt;/code&gt;</code></pre><h2 id="变量格式化"><a href="#变量格式化" class="headerlink" title="变量格式化"></a>变量格式化</h2><p>HTML <code>&lt;var&gt;</code> 元素定义<em>数学变量</em>：</p><h1 id="HTML-引用"><a href="#HTML-引用" class="headerlink" title="HTML 引用"></a>HTML 引用</h1><h2 id="短引用"><a href="#短引用" class="headerlink" title="短引用"></a>短引用</h2><p>HTML <code>&lt;q&gt;</code> 元素定义<em>短的引用</em>。</p><p>浏览器通常会为 <code>&lt;q&gt;</code> 元素包围<em>引号</em>。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;WWF 的目标是：&lt;q&gt;构建人与自然和谐共存的世界。&lt;/q&gt;&lt;/p&gt;</code></pre><h2 id="长引用"><a href="#长引用" class="headerlink" title="长引用"></a>长引用</h2><p>HTML <code>&lt;blockquote&gt;</code> 元素定义被引用的节。</p><p>浏览器通常会对 <code>&lt;blockquote&gt;</code> 元素进行<strong>缩进</strong>处理。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;以下内容引用自 WWF 的网站：&lt;/p&gt;&lt;blockquote cite=&quot;http://www.worldwildlife.org/who/index.html&quot;&gt;五十年来，WWF 一直致力于保护自然界的未来。世界领先的环保组织，WWF 工作于 100 个国家，并得到美国一百二十万会员及全球近五百万会员的支持。&lt;/blockquote&gt;</code></pre><h2 id="缩略词"><a href="#缩略词" class="headerlink" title="缩略词"></a>缩略词</h2><p>HTML <code>&lt;abbr&gt;</code> 元素定义<em>缩写</em>或首字母缩略语。</p><p>对缩写进行标记能够为浏览器、翻译系统以及搜索引擎提供有用的信息。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;&lt;abbr title=&quot;World Health Organization&quot;&gt;WHO&lt;/abbr&gt; 成立于 1948 年。&lt;/p&gt;</code></pre><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>HTML <code>&lt;dfn&gt;</code> 元素定义项目或缩写的<strong>定义</strong>。</p><p><code>&lt;dfn&gt;</code> 的用法，按照 HTML5 标准中的描述，有点复杂：</p><ol><li>如果设置了 <code>&lt;dfn&gt;</code> 元素的 title 属性，则定义项目：</li></ol><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;&lt;dfn title=&quot;World Health Organization&quot;&gt;WHO&lt;/dfn&gt; 成立于 1948 年。&lt;/p&gt;</code></pre><ol><li>如果 <code>&lt;dfn&gt;</code> 元素包含具有标题的 <code>&lt;abbr&gt;</code> 元素，则 title 定义项目：</li></ol><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;&lt;dfn&gt;&lt;abbr title=&quot;World Health Organization&quot;&gt;WHO&lt;/abbr&gt;&lt;/dfn&gt; 成立于 1948 年。&lt;/p&gt;</code></pre><ol><li>否则，<code>&lt;dfn&gt;</code> 文本内容即是项目，并且父元素包含定义。</li></ol><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;&lt;dfn&gt;WHO&lt;/dfn&gt; World Health Organization 成立于 1948 年。&lt;/p&gt;</code></pre><p>注释：如果您希望简而化之，请使用第一条，或使用 <code>&lt;abbr&gt;</code> 代替。</p><h2 id="联系信息"><a href="#联系信息" class="headerlink" title="联系信息"></a>联系信息</h2><p>HTML <code>&lt;address&gt;</code> 元素定义文档或文章的联系信息（作者/拥有者）。</p><p>此元素通常以<strong><em>斜体</em></strong> 显示。大多数浏览器会在此元素前后添加折行。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;address&gt;Written by Donald Duck.&lt;br&gt; Visit us at:&lt;br&gt;Example.com&lt;br&gt;Box 564, Disneyland&lt;br&gt;USA&lt;/address&gt;</code></pre><h2 id="著作标题"><a href="#著作标题" class="headerlink" title="著作标题"></a>著作标题</h2><p>HTML <code>&lt;cite&gt;</code> 元素定义<strong>著作的标题</strong>。</p><p>浏览器通常会以斜体显示 <code>&lt;cite&gt;</code> 元素。</p><blockquote><p>实例</p></blockquote><pre><code>&lt;p&gt;&lt;cite&gt;The Scream&lt;/cite&gt; by Edward Munch. Painted in 1893.&lt;/p&gt;</code></pre><h2 id="双向重写"><a href="#双向重写" class="headerlink" title="双向重写"></a>双向重写</h2><p>HTML <code>&lt;bdo&gt;</code> 元素定义双流向覆盖（bi-directional override）。</p><p><code>&lt;bdo&gt;</code> 元素用于覆盖当前文本方向：</p><blockquote><p>实例</p></blockquote><pre><code>&lt;bdo dir=&quot;rtl&quot;&gt;This text will be written from right to left&lt;/bdo&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> HTML </category>
          
          <category> 学习笔记 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iPhone的Safari你真的会用吗？</title>
      <link href="/16377d74/"/>
      <url>/16377d74/</url>
      <content type="html"><![CDATA[<h1 id="iPhone的Safari你真的会用吗？"><a href="#iPhone的Safari你真的会用吗？" class="headerlink" title="iPhone的Safari你真的会用吗？"></a>iPhone的Safari你真的会用吗？</h1><p>iPhone自带的浏览器Safari可以说是一款普通的不能再普通的浏览器了，也许有人天天再用Safari，可是你真的会用吗？对于不常用和从来不用Safari的人，希望可以通过这篇文章让你爱上Safari！</p><p>今天给大家分享一下自己使用Safari的经验与技巧。（iPhone系统版本为ios11.3）</p><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><h3 id="新建与关闭"><a href="#新建与关闭" class="headerlink" title="新建与关闭"></a>新建与关闭</h3><p>常用的新建与关闭标签这里就不多说了，下面给大家说说如何<strong>快速新建标签</strong>和<strong>关闭所有标签</strong> </p><ul><li><p>长按片刻<strong>新建标签</strong>按钮，就可以更便捷的管理标签了</p><p><img src="https://i.loli.net/2018/04/16/5ad4206f37fab.jpg" width="50%"></p></li></ul><h3 id="标签页调序"><a href="#标签页调序" class="headerlink" title="标签页调序"></a>标签页调序</h3><p>当我们使用Safari时新建的标签页太多，两个标签页之间隔了较多的标签页时，只需调一调标签页顺序即可轻松解决！</p><ul><li><p>先点击<strong>新建标签</strong>按钮，然后找到需要移动的标签页长按那个标签页片刻，即可前后移动标签页</p><p><img src="https://i.loli.net/2018/04/16/5ad4210dcbb04.gif" width="50%"></p></li></ul><h3 id="最近关闭的标签"><a href="#最近关闭的标签" class="headerlink" title="最近关闭的标签"></a>最近关闭的标签</h3><p>不小心关错了多个网页，不用打开历史记录没头没脑的翻，下面教你直接快速打开</p><ul><li><p>先点击浏览器右下角<strong>新建标签</strong>按钮，然后长按片刻中间的 <strong>+</strong> 按钮就可打开最近关闭的标签页</p><p><img src="https://i.loli.net/2018/04/16/5ad420921ed7f.jpg" width="50%"></p></li></ul><h2 id="阅读模式"><a href="#阅读模式" class="headerlink" title="阅读模式"></a>阅读模式</h2><p>阅读模式不仅可以给用户带来良好的浏览体验，还具有<strong>广告屏蔽</strong>和<strong>解除网页限制</strong>的功能</p><ul><li><p>广告屏蔽</p><p>那些喜欢用浏览器看在线小说用户应该都很反感网页页头和页脚的小广告，<strong>阅读模式</strong>无疑是解决这个痛点最便捷的方法了！</p><p><img src="https://i.loli.net/2018/04/16/5ad420b051295.jpg" width="50%"></p></li><li><p>解除网页限制</p><p>网页限制通俗的说就是在此网页上不允许复制，比如：用Safari浏览百度文库中word文档</p><p>对于非人民币玩家来很不友好，无法对所需内容进行复制，此时你只需要打开<strong>阅读模式</strong>就可以尽情的复制啦！</p><p>然而对于人名币玩家请开个Vip随便下载，什么网页限制那都不是事！</p><p><img src="https://i.loli.net/2018/04/16/5ad42129580ff.jpg" width="50%"></p></li></ul><h2 id="网页长截图"><a href="#网页长截图" class="headerlink" title="网页长截图"></a>网页长截图</h2><p>这里的“网页长截图”并非真正网页长截图，是通过<strong>创建PDF</strong>来实现网页长截图。比起来一张张截图然后拼接，保存为PDF未尝不是一个不错的选择</p><p> <img src="https://i.loli.net/2018/04/16/5ad41ee29ae4e.gif" width="50%"></p><h2 id="书签与阅读列表"><a href="#书签与阅读列表" class="headerlink" title="书签与阅读列表"></a>书签与阅读列表</h2><p>常规方式就是单击<strong>分享</strong>按钮添加书签与阅读列表，看了前面的便捷方式之后我想大家一定都能才出来便捷方式是什么——没错就是长按片刻<strong>书签</strong>按钮</p><p><img src="https://i.loli.net/2018/04/16/5ad4216d0407e.jpg" width="50%"></p><p>订阅功能这里不能大家演示了，为了使用录屏功能升级了iOS11.3。之前使用iOS10.3测试的时候长按片刻<strong>书签</strong>按钮还会出现<strong>订阅</strong>选项。</p><p>订阅功能有什么用呢？不仅可以订阅博客网站的文章更新，还可以订阅微博、twitter、Facebook的动态更新</p><h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><ul><li><p>网页查找</p><p>快速查找网页中所需的信息</p><p><img src="https://i.loli.net/2018/04/16/5ad41e846faa0.jpg" width="50%"></p></li><li><p>添加到主屏幕</p><p>将常用网站添加到主屏幕，快速便捷访问提高学习工作效率</p><p><img src="https://i.loli.net/2018/04/16/5ad41f553be87.jpg" width="50%"></p></li></ul>]]></content>
      
      <categories>
          
          <category> 教程 </category>
          
          <category> iPhone </category>
          
          <category> Safari </category>
          
          <category> 效率 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> iPhone </tag>
            
            <tag> Safari </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「实测」美区Apple ID注册三部曲</title>
      <link href="/7c0510df/"/>
      <url>/7c0510df/</url>
      <content type="html"><![CDATA[<h3 id="三种方法注册美区Apple-ID"><a href="#三种方法注册美区Apple-ID" class="headerlink" title="三种方法注册美区Apple ID"></a>三种方法注册美区Apple ID</h3><ol><li>手机：免FQ+浏览器申请ID+App Store完善资料</li><li>手机：FQ+App Store申请并完善ID</li><li>电脑：FQ(全局代理模式)+浏览器申请ID+ iTunes（卡bug)完善资料</li></ol><blockquote><p>申请须知</p></blockquote><ul><li>申请时要用到邮箱信息，经测试国内大部分邮箱无法通过此方法注册，建议使用国外邮箱。<ul><li><a href="https://www.lifewire.com/top-free-email-services-1171481" target="_blank" rel="noopener">2018年最佳国外免费邮箱</a> </li><li><a href="https://www.benpig.com/mail" target="_blank" rel="noopener">国外邮箱大全</a> </li></ul></li><li>填写身份信息不要随便编造，年龄填写建议大于18岁。<ul><li><a href="http://us.2kz.net/" target="_blank" rel="noopener">美国地址生成器</a>  </li><li><a href="https://www.fakenamegenerator.com/" target="_blank" rel="noopener">假名生成器</a>  </li></ul></li><li>方法二和方法三需要FQ工具<ul><li><a href="https://gaotf.tk/a00eda23/">苹果FQ教程及软件推荐</a></li><li><a href="https://doub.ws/androidkxsw/" target="_blank" rel="noopener">安卓FQ教程及软件推荐</a></li><li><a href="https://doub.ws/ss-jc41/" target="_blank" rel="noopener">电脑FQ教程及软件推荐</a></li><li><a href="https://doub.ws/sszhfx/" target="_blank" rel="noopener">免费SS/SSR账号分享</a> </li></ul></li></ul><blockquote><p>关于付款信息None的官方说明</p></blockquote><ul><li><a href="https://support.apple.com/zh-cn/HT203905" target="_blank" rel="noopener">如果您无法在编辑 Apple ID 付款信息时选取“无”</a> </li></ul><hr><h3 id="方法一：免FQ手机注册"><a href="#方法一：免FQ手机注册" class="headerlink" title="方法一：免FQ手机注册 "></a><span id="1">方法一：免FQ手机注册 </span></h3><blockquote><p>注册账号</p></blockquote><ol><li><p>用手机浏览器打开<a href="https://www.apple.com" target="_blank" rel="noopener">Apple美国官网</a> </p></li><li><p>打开官网后，翻到最下面先将地区改为 <code>United States</code></p><p><img src="https://i.loli.net/2018/04/01/5ac0608d28a3e.png" width="50%"> </p></li><li><p>还是在网页做下面找到 <code>Account</code> 点击 <code>Manage your Applr ID</code> </p><p><img src="https://i.loli.net/2018/04/01/5ac061698e212.png" width="50%"></p></li><li><p>点击 <code>Create your Apple ID</code></p><p><img src="https://i.loli.net/2018/04/01/5ac061a977a77.png" width="50%"></p></li><li><p>填写身份信息</p><p><img src="https://i.loli.net/2018/04/01/5ac0a32c5d475.jpg" width="50%"></p></li><li><p>验证邮箱，输入邮件中的验证码。</p><p>若输入验证码之后提示 <code>You accounnt cannot be created at this time</code> 这是因为你是用了国内的邮箱，换成国外的邮箱再注册。</p><p><img src="https://i.loli.net/2018/04/01/5ac07d3acca9a.png" width="50%"></p></li><li><p>显示下图就说明Apple ID已经申请好了，不过没有完善信息的Apple ID是无法正常使用的。</p><p><img src="https://i.loli.net/2018/04/01/5ac0a361c1c73.jpg" width="50%"></p></li></ol><blockquote><p>完善信息</p></blockquote><ol><li><p>打开App Store 登陆刚刚注册成功的 Apple ID 时会显示一下页面，点击 <code>检查</code>  </p><p><img src="https://i.loli.net/2018/04/01/5ac07ee9c9978.jpg" width="50%"></p></li><li><p>确认国家是否是美国，若不是请换成 <code>United States</code> 。然后勾选下面  <code>Agree to....</code> </p><p><img src="https://i.loli.net/2018/04/01/5ac07f6aef8a5.jpg" width="50%"></p></li><li><p>再次填写身份信息（建议与之前注册时填写的信息一至，我没有使用一同一个人的信息，因为网页刷新之前那个人的信息丢失了）<code>Apple Updates</code> 可以不勾选</p><p><img src="https://i.loli.net/2018/04/01/5ac081c3ba73b.jpg" width="50%"></p></li><li><p>支付方式选择 <code>None</code>  最后点击 <code>Next</code>美国Apple ID 就创建完成了！</p><p><img src="https://i.loli.net/2018/04/01/5ac08805e91d0.jpg" width="50%"></p></li></ol><hr><h3 id="方法二：FQ手机注册"><a href="#方法二：FQ手机注册" class="headerlink" title="方法二：FQ手机注册"></a>方法二：FQ手机注册</h3><blockquote><p>注册流程</p></blockquote><ol><li><p>打开FQ软件选择美国路线 (我使用的是<a href="https://gaotf.tk/posts/a00eda23/">暮梅Mume</a>)</p><p><img src="https://i.loli.net/2018/04/01/5ac08efd32e7e.png" width="50%"></p></li><li><p>打开App Store 退出正在登陆的Apple ID 然后点击登陆选择<code>创键新Apple ID</code> </p><p><img src="https://i.loli.net/2018/04/01/5ac07eb086b31.jpg" width="50%"></p></li><li><p>填写邮箱和和密码</p><p><img src="https://i.loli.net/2018/04/01/5ac09266b4ef2.jpg" width="50%"></p></li><li><p>填写身份信息及设置密保</p><p><img src="https://i.loli.net/2018/04/01/5ac09d47392a0.jpg" width="50%"></p></li><li><p>填写支付信息及账单邮寄地址</p><p><img src="https://i.loli.net/2018/04/01/5ac09a3953a9e.jpg" width="50%"></p></li><li><p>输入验证码验证邮箱</p><p><img src="https://i.loli.net/2018/04/01/5ac0a3953d20d.jpg" width="50%"></p></li><li><p>显示以下信息说明一个可以正常使用的Apple ID就创建成功了</p><p><img src="https://i.loli.net/2018/04/01/5ac0a3ffc3aa0.png" width="50%"></p></li></ol><hr><h3 id="方法三：电脑FQ注册"><a href="#方法三：电脑FQ注册" class="headerlink" title="方法三：电脑FQ注册"></a>方法三：电脑FQ注册</h3><p>此方法是利用PayPal的登陆Bug来注册美国Apple ID。注册流程分为<u><em>注册账号</em></u> 和<u><em>完善信息</em></u> 两部分。</p><ul><li>注册账号的步骤与<strong><a href="#1">方法一</a></strong>一样，此时不需要FQ。</li><li>完善信息时需要FQ，并且需要开启全局模式</li></ul><blockquote><p>完善信息</p></blockquote><ol><li><p>打开iTunes 登陆刚刚注册好的Apple ID </p><p><img src="https://i.loli.net/2018/03/31/5abfaac9c3154.png" alt=""></p></li><li><p>选择使用PayPal点击下方 <code>Log In to PayPal</code> 后，将会打开浏览器跳转到PayPal的注册界面</p><p><img src="https://i.loli.net/2018/04/01/5ac0a81b5dcd5.png"></p></li><li><p>点击左下角的 <code>取消并返回到iTunes and App Store</code> 第一次可能不会出现 <code>None</code> 选项，需要刷新两三次PayPal的网页，再点击<code>取消并返回到iTunes and App Store</code> 。（我刷新了两次就出现了 <code>None</code> 选项）</p><p><img src="https://i.loli.net/2018/04/05/5ac5c42bba8af.png"></p></li><li><p>卡出Bug之后选择 <code>None</code>  ，完善信息（第三行信息为：xxx街区xxx号 百度就好了）</p><p><img src="https://i.loli.net/2018/03/31/5abfa9d7d84f9.png" alt=""></p></li><li><p>显示以下信息说明一个可以正常使用的Apple ID就创建成功了</p><p><img src="https://i.loli.net/2018/04/01/5ac0ab839c2b8.png"></p></li></ol><hr><h3 id="方法四？！"><a href="#方法四？！" class="headerlink" title="方法四？！"></a>方法四？！</h3><blockquote><p>若觉得麻烦请关注<code>微信号：i爱上分享(i-LoveShare)</code>，后台回复 <code>美区ID</code> 获取免费共享ID。</p></blockquote><p>共享的Apple ID都是通过上面的方法申请的，公众号里分享给大家两个Apple ID。共享Apple ID不能登陆iCloud哦~据说会锁机的，我也没有试过😂</p><p><img src="https://i.loli.net/2018/04/01/5ac0b04c68ff3.png"></p>]]></content>
      
      <categories>
          
          <category> 自由上网 </category>
          
          <category> Apple </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Apple </tag>
            
            <tag> 实测 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS软件推荐--暮梅（Mume）</title>
      <link href="/a00eda23/"/>
      <url>/a00eda23/</url>
      <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><hr><p>暮梅（Mume）是iOS系统的一款优秀的<strong>免费</strong>网(科)络(学)代(上)理(网)软件。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>通过一系列规则，定制自己的网络环境。通过规则，用户可以对指定的网络请求执行特定的操作（直连、拒绝、代理），以此达到屏蔽广告、穿越防火墙等功能。</p><h4 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h4><ul><li>连接时可采用PAC代理模式，即：国内网站使用直连，国外网站使用代理。</li><li>内置多条免费路线，使用简单，特别适合小白使用。</li><li>预设广告屏蔽规则组，告别广告烦扰。</li><li>拥有Widget组件一键开启或关闭，使用十分便捷。</li><li>支持自定义路线和规则组，不仅可以手动添加SS / SSR / Socks5，还支持二维码和URL导入路线和规则组。</li></ul><h3 id="软件截图"><a href="#软件截图" class="headerlink" title="软件截图"></a>软件截图</h3><hr><p><img src="https://i.loli.net/2018/04/03/5ac39450a5eb1.jpg"></p><h3 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h3><hr><blockquote><p>第一次使用时可能需要其他“网络代理软件”配合使用！建议下载<code>狸猫ud∧</code> （手机旋转180°）  </p></blockquote><p>第一次打开暮梅（Mume）时<code>首页</code> 和<code>管理</code> 页面显可能示为空白，解决方法有两种</p><p><img src="https://i.loli.net/2018/04/03/5ac3838172515.png" width="50%"></p><blockquote><p>方法一：</p></blockquote><p>关闭暮梅（Mume）打开刚刚下载的“狸猫”开启代理，先确认可以访问Google之后，再次打开暮梅（Mume）。此时管理页面的<code>代理</code> 和<code>规则组</code> 应该会出现软件预设的配置（代理和规则组）。</p><p><img src="https://i.loli.net/2018/04/03/5ac38ca8edaca.jpg"></p><blockquote><p>方法二：</p></blockquote><p>若此方法一无效请不要关闭“狸猫”，打开暮梅（Mume）的 <code>更多</code> -&gt; <code>使用手册</code> -&gt; <code>使用说明</code> 点击页面中的<a href="https://mumevpn.com/reset.php" target="_blank" rel="noopener">链接</a>重置暮梅（Mume）</p><p><img src="https://i.loli.net/2018/04/03/5ac385bf1c573.png" width="50%"></p><h4 id="添加-删除预设"><a href="#添加-删除预设" class="headerlink" title="添加/删除预设"></a>添加/删除预设</h4><p><img src="https://i.loli.net/2018/04/03/5ac395b500bfe.jpg" width="50%"></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>部分预设代理是有<code>有效期</code>的，具体的有效期请在添加代理的时候先看一下<code>Expiry date</code> </p><p><img src="https://i.loli.net/2018/04/03/5ac38f807615e.jpg"></p><h3 id="导入代理"><a href="#导入代理" class="headerlink" title="导入代理"></a>导入代理</h3><hr><blockquote><p>首先你要有可导入的代理，可以选择自己搭建或者选择别人分享的路线。  </p></blockquote><p>下面分享几个免费SS / SSR 路线的网站</p><ul><li><a href="https://doub.ws/sszhfx/" target="_blank" rel="noopener">免费SS/SSR账号分享</a> </li><li><a href="https://www.namaho.org/" target="_blank" rel="noopener">namaho</a> </li></ul><h4 id="二维码导入"><a href="#二维码导入" class="headerlink" title="二维码导入"></a>二维码导入</h4><p>点击<code>首页</code> 右上角的➕号选择<code>从二维码导入</code> 或者在<code>更多</code> 页面点击 <code>从二维码导入</code></p><p><img src="https://i.loli.net/2018/04/03/5ac38ae715749.jpg"> </p><h4 id="URL导入"><a href="#URL导入" class="headerlink" title="URL导入"></a>URL导入</h4><p>在 <code>更多</code>页面选择<code>从URL导入配置</code> </p><p><img src="https://i.loli.net/2018/04/03/5ac38bff5c837.jpg" width="50%"></p><h4 id="手动导入"><a href="#手动导入" class="headerlink" title="手动导入"></a>手动导入</h4><p>点击 <code>首页</code> 右上角➕号选择 <code>手动导入</code>代理类型等配置根据具体路线选择填写。</p><p><img src="https://i.loli.net/2018/04/03/5ac38c1fcde1d.jpg" width="50%"></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><hr><ul><li>没有美区Apple ID的同学请关注 <code>微信公众号:i爱上分享</code> ，后台回复 <code>美区ID</code>获取账号。</li><li>登陆美区app store 搜索<code>暮梅</code> 或者<code>Mume</code> 下载</li></ul><p><img src="https://i.loli.net/2018/04/03/5ac3988a65c8c.png" alt="微信公众号：i爱上分享" align="center">  </p>]]></content>
      
      <categories>
          
          <category> iOS软件 </category>
          
          <category> 自由上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自由上网 </tag>
            
            <tag> 软件推荐 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「小白系列」Hexo+GitHub搭建博客-基础篇</title>
      <link href="/c28f15d0/"/>
      <url>/c28f15d0/</url>
      <content type="html"><![CDATA[<h3 id="踏上折腾博客不归路的第一步……"><a href="#踏上折腾博客不归路的第一步……" class="headerlink" title="踏上折腾博客不归路的第一步……"></a>踏上折腾博客不归路的第一步……</h3><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>结合网上的Hexo + Github搭建博客教程和个人折腾博客的经验（踩过的坑😭）特写此文一来记录自己搭建折腾博客的不归路，二来分享给想搭建博客的小白，让小白们少走弯路！</p></blockquote><blockquote><p>电脑系统为window 10 64位专业版</p></blockquote><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><hr><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>下载git: <a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></p><p>出于安全考虑安装时勾选Use Git from the Windows Command Prompt</p><p><img src="https://i.loli.net/2018/03/21/5ab23c9548ff1.png" alt=""></p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>安装成功的标志就是在电脑上任何位置<strong>鼠标右键</strong>能够出现如下两个选择</p><p><img src="https://i.loli.net/2018/03/21/5ab23d8bd7ae9.png" alt=""></p><p>打开<code>命令行(cmd)</code> ，方法如下</p><ul><li>win+R→输入cmd</li><li>win+X→C或A</li><li>shift+鼠标右键→cmd（win10用户打开PowerShell)</li><li>在当前文件夹打开cmd，<a href="https://blog.csdn.net/xfyangle/article/details/75030062" target="_blank" rel="noopener">戳这里</a></li></ul><p>输入</p><pre><code>git -version  #可简写为 git -v</code></pre><p>配置成功的界面如图</p><p><img src="https://i.loli.net/2018/03/21/5ab23bdd4c2c3.png" alt="img"></p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><hr><h4 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h4><p>下载Node.js: <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a></p><p>安装Node.js和配置好Node.js环境，打开cmd输入<code>node -v</code>和 <code>npm -v</code>配置成功界面如图</p><p><img src="https://i.loli.net/2018/03/21/5ab23b8d0f404.png" alt=""></p><h3 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h3><hr><h4 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h4><p>根据个人喜好新建一个文件夹，我是在D盘新建了一个gaotf-blog文件夹（下文称此文件夹为yourblog）然后通过 <code>命令行</code> 进入到该文件夹里</p><p><img src="https://i.loli.net/2018/03/21/5ab241eb87c93.png" alt=""></p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>输入</p><pre><code>npm install hexo -g</code></pre><p>可能你会看到一个 <code>WARN</code> ，但是不用担心，这不会影响你的正常使用</p><h4 id="检验hexo"><a href="#检验hexo" class="headerlink" title="检验hexo"></a>检验hexo</h4><p>输入 </p><pre><code>hexo -v</code></pre><p><img src="https://i.loli.net/2018/03/21/5ab244c755a4c.png" alt=""></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>输入 </p><pre><code>hexo init</code></pre><p><img src="https://i.loli.net/2018/03/21/5ab245c4718fd.png" alt=""></p><p>最后显示 <code>Start blogging with Hexo！</code>  说明安装成功</p><p><img src="https://i.loli.net/2018/03/21/5ab2467894770.png" alt=""></p><h4 id="安装所需组件"><a href="#安装所需组件" class="headerlink" title="安装所需组件"></a>安装所需组件</h4><p>输入  </p><pre><code>npm install</code></pre><p><img src="https://i.loli.net/2018/03/21/5ab2471b4cb51.png" alt=""></p><h4 id="Hexo-初体验"><a href="#Hexo-初体验" class="headerlink" title="Hexo 初体验"></a>Hexo 初体验</h4><p>输入</p><pre><code>hexo g hexo s</code></pre><p>开启服务器，访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> </p><p><img src="https://i.loli.net/2018/03/21/5ab2489960cb1.png" alt=""></p><blockquote><p>如果页面一直无法跳转，可能是端口被占用了。此时我们 <code>ctrl+c</code>停止服务器</p></blockquote><p>输入</p><pre><code> hexo server -p 5000</code></pre><h4 id="成功访问"><a href="#成功访问" class="headerlink" title="成功访问"></a>成功访问</h4><p><img src="https://i.loli.net/2018/03/21/5ab248f28da53.png" alt=""></p><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><hr><h4 id="账户注册"><a href="#账户注册" class="headerlink" title="账户注册"></a>账户注册</h4><p>Github注册：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><blockquote><p>记得验证邮箱</p></blockquote><p><img src="https://i.loli.net/2018/03/28/5abaf8f3bda9e.png" alt=""></p><h4 id="新建存储库"><a href="#新建存储库" class="headerlink" title="新建存储库"></a>新建存储库</h4><p>在GitHu个人主页的右上角 <code>＋</code> -&gt; <code>new repository</code> </p><p><img src="https://i.loli.net/2018/03/21/5ab25cd92a457.png" alt=""></p><blockquote><p>储存库名称的格式为 <code>yourname.github.io</code> ，存储库可能不会立即生效</p></blockquote><p><img src="https://i.loli.net/2018/03/21/5ab25d789b591.png" alt=""></p><h4 id="访问存储库"><a href="#访问存储库" class="headerlink" title="访问存储库"></a>访问存储库</h4><p> 在建好的存储库右侧有个 <code>settings</code> 按钮，点击它，向下拉到<code>GitHub Pages</code>  </p><p><img src="https://i.loli.net/2018/03/21/5ab255ef7980a.png" alt=""></p><p>你会看到 <code>您的网站发布在https://yourname.github.io</code>  访问这个网站，你会发现该项目已经被部署到网络上，并且能够通过外网来访问它。 </p><p><img src="https://i.loli.net/2018/03/21/5ab265f5de0ce.png" alt=""></p><p>由于没有将Hexo与Github page关联起来，访问的页面只是你创建的储存库的名字</p><p><img src="https://i.loli.net/2018/03/21/5ab2665b6f308.png" alt=""></p><h3 id="Hexo关联Github"><a href="#Hexo关联Github" class="headerlink" title="Hexo关联Github"></a>Hexo关联Github</h3><hr><p>找到文件夹yourblog我的是在gaotf-blog，右键 <code>Git Bash  Here</code>  </p><p>下面所使用的均为 <code>Git Bash  Here</code>  不是命令行cmd</p><p><img src="https://i.loli.net/2018/03/21/5ab26758a2b2a.png" alt=""></p><h4 id="设置Git"><a href="#设置Git" class="headerlink" title="设置Git"></a>设置Git</h4><p>输入</p><blockquote><p>不是储存库的名字，是用户名</p></blockquote><pre><code>$ git config --global user.name &quot;用户名&quot;   # 注册GitHub时设置的用户名$ git config --global user.email &quot;邮箱&quot;   # 注册GitHub时使用的邮箱</code></pre><p><img src="https://i.loli.net/2018/03/21/5ab268d3c79e8.png" alt=""></p><h4 id="检验-ssh-是否存在"><a href="#检验-ssh-是否存在" class="headerlink" title="检验 .ssh 是否存在"></a>检验 <code>.ssh</code> 是否存在</h4><p>输入</p><pre><code>$ cd ~/.ssh$ ls</code></pre><p>若显示如下图说明<code>.ssh</code> 存在，请<a href="#1">戳这里</a>跳过 <strong>创建 <code>.ssh</code> </strong> 这个步骤<img src="https://i.loli.net/2018/03/28/5abb464887725.png" alt=""></p><p>若显示如下图说明 <code>.ssh</code> 不存在，请看下一个步骤 <strong>创建 <code>.ssh</code> </strong>  </p><p><img src="https://i.loli.net/2018/03/28/5abb791e05cdf.png" alt=""></p><h4 id="创建-ssh"><a href="#创建-ssh" class="headerlink" title="创建 .ssh"></a>创建 <code>.ssh</code></h4><p> 输入</p><pre><code>$ ssh-keygen -t rsa -C &quot;邮箱&quot;</code></pre><p>然后敲三次回车（不是输入完立刻敲三下回车哦~）生成密钥，最后得到了两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code>（默认存储路径是：C:\Users\Administrator.ssh）</p><p><img src="https://i.loli.net/2018/03/21/5ab270f615a2f.png" alt=""></p><p>添加密钥到ssh-agent</p><p>输入</p><pre><code>$ eval &quot;$(ssh-agent -s)&quot;</code></pre><p>添加生成的SSH key到ssh-agent</p><p>输入</p><pre><code>$ ssh-add ~/.ssh/id_rsa</code></pre><p><span id="1">复制SSH key到剪贴板</span></p><p>输入</p><pre><code>$ xclip -sel c ~/.ssh/id_rsa.pub</code></pre><h4 id="添加ssh-key"><a href="#添加ssh-key" class="headerlink" title="添加ssh key"></a>添加ssh key</h4><p> 登录Github，点击头像下的<code>settings</code></p><p><img src="https://i.loli.net/2018/03/28/5abb78eef1250.png" alt=""></p><p>新建一个<code>new ssh key</code> 将剪贴板文件里的内容复制上去（ctrl+v）</p><p><img src="https://i.loli.net/2018/03/21/5ab2745a823de.png" alt=""></p><h4 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h4><p>输入</p><pre><code>$ ssh -T git@github.com</code></pre><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code> 输入yes</p><p>然后如果看到 <code>Hi</code>后面是你的用户名，就说明成功了</p><p><img src="https://i.loli.net/2018/03/21/5ab2742f211c2.png" alt=""></p><h4 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h4><p>在yourblog文件夹中，找到 <code>_config.yml</code> 文件</p><p><img src="https://i.loli.net/2018/03/21/5ab2762c96654.png" alt=""></p><p>打开后，找到<code>deploy</code> 修改后面的值</p><blockquote><p>冒号后面有一个空格</p></blockquote><pre><code>#Deployment##Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repository: git@github.com:xxx/xxx.github.io.git #替换成自己的  branch: master</code></pre><h4 id="获取repository"><a href="#获取repository" class="headerlink" title="获取repository"></a>获取<code>repository</code></h4><p>登陆GitHub，打开之前创建的储存库，点击右上角 <code>Clone or download</code> </p><p>若显示的 <code>Clone with HTTPS</code> 请点击右边的 <code>Use SSH</code> 复制下来</p><p><img src="https://i.loli.net/2018/03/28/5abb55387a3e3.png" alt=""></p><h3 id="访问博客"><a href="#访问博客" class="headerlink" title="访问博客"></a>访问博客</h3><hr><p>在yourblog文件夹打开<code>命令行cmd</code></p><p>输入</p><pre><code>hexo d</code></pre><p>随后按照提示，分别输入自己的Github账号用户名和密码，开始上传部署。部署好了之后就可以访问刚刚上传的网站了。</p><p>网址格式为：<code>https://yourname.github.io</code> </p><p>测试网站：<a href="https://gaotf.github.io" target="_blank" rel="noopener">https://gaotf.github.io</a></p>]]></content>
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 博客 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>i-Share博客测试</title>
      <link href="/d09585e3/"/>
      <url>/d09585e3/</url>
      <content type="html"><![CDATA[<p>测试博客</p><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><h2 id="test-1"><a href="#test-1" class="headerlink" title="test"></a>test</h2><h3 id="test-2"><a href="#test-2" class="headerlink" title="test"></a>test</h3><h4 id="test-3"><a href="#test-3" class="headerlink" title="test"></a>test</h4><h5 id="test-4"><a href="#test-4" class="headerlink" title="test"></a>test</h5><h6 id="test-5"><a href="#test-5" class="headerlink" title="test"></a>test</h6><p>test</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>免责声明</title>
      <link href="/6934b86c/"/>
      <url>/6934b86c/</url>
      <content type="html"><![CDATA[<p>i-Share网站(博客)免责声明</p><p>&emsp;&emsp;访问者在接受本网站(博客)服务之前，请务必仔细阅读本条款并同意本声明。访问者访问本网站(博客)的行为以及通过各类方式利用本网站(博客)的行为，都将被视作是对本声明全部内容的无异议的认可;如有异议，请立即跟本网站(博客)协商，并取得本网站(博客)的书面同意意见。</p><p>&emsp;&emsp;第一条访问者在从事与本网站(博客)相关的所有行为(包括但不限于访问浏览、利用、转载、宣传介绍)时，必须以善意且谨慎的态度行事;访问者不得故意或者过失的损害或者弱化本网站(博客)的各类合法权利与利益，不得利用本网站(博客)以任何方式直接或者间接的从事违反中国法律、国际公约以及社会公德的行为，且访问者应当恪守下述承诺：</p><p>&emsp;&emsp;1、传输和利用信息符合中国法律、国际公约的规定、符合公序良俗;</p><p>&emsp;&emsp;2、不将本网站(博客)以及与之相关的网络服务用作非法用途以及非正当用途;</p><p>&emsp;&emsp;3、不干扰和扰乱本网站(博客)以及与之相关的网络服务;</p><p>&emsp;&emsp; 4、遵守与本网站(博客)以及与之相关的网络服务的协议、规定、程序和惯例等。</p><p>&emsp;&emsp;第二条本网站(博客)郑重提醒访问者：请在转载、上载或者下载有关作品时务必尊重该作品的版权、著作权;如果您发现有您未署名的作品，请立即和我们联系，我们会在第一时间加上您的署名或作相关处理。</p><p>&emsp;&emsp;第三条除我们另有明确说明或者中国法律有强制性规定外，本网站(博客)用户原创的作品，本网站(博客)及作者共同享有版权，其他网站及传统媒体如需使用，须取得本网站(博客)的书面授权，未经授权严禁转载或用于其它商业用途。</p><p>&emsp;&emsp;第四条本网站(博客)内容仅代表作者本人的观点，不代表本网站(博客)的观点和看法，与本网站(博客)立场无关，相关责任作者自负。</p><p>&emsp;&emsp;第五条本网站(博客)有权将在本网站(博客)内发表的作品用于其他用途，包括网站、电子杂志等，作品有附带版权声明者除外。</p><p>&emsp;&emsp;第六条未经常本网站(博客)和作者共同同意，其他任何机构不得以任何形式侵犯其作品著作权，包括但不限于：擅自复制、链接、非法使用或转载，或以任何方式建立作品镜像。</p><p>&emsp;&emsp;第七条本网站(博客)所刊载的各类形式(包括但不仅限于文字、图片、图表)的作品仅供参考使用，并不代表本网站(博客)同意其说法或描述，仅为提供更多信息，也不构成任何投资建议。对于访问者根据本网站(博客)提供的信息所做出的一切行为，除非另有明确的书面承诺文件，否则本网站(博客)不承担任何形式的责任。</p><p>&emsp;&emsp;第八条当本网站(博客)以链接形式推荐其他网站内容时，本网站(博客)并不对这些网站或资源的可用性负责，且不保证从这些网站获取的任何内容、产品、服务或其他材料的真实性、合法性，对于任何因使用或信赖从此类网站或资源上获取的内容、产品、服务或其他材料而造成(或声称造成)的任何直接或间接损失，本网站(博客)均不承担任何责任。</p><p>&emsp;&emsp;第九条访问者在本网站(博客)注册时提供的一些个人资料，本网站(博客)除您本人同意及第十条规定外不会将用户的任何资料以任何方式泄露给任何一方。</p><p>&emsp;&emsp;第十条当政府部门、司法机关等依照法定程序要求本网站(博客)披露个人资料时，本网站(博客)将根据执法单位之要求或为公共安全之目的提供个人资料。在此情况下之任何披露，本网站(博客)均得免责。</p><p>&emsp;&emsp;第十一条由于用户将个人密码告知他人或与他人共享注册账户，由此导致的任何个人资料泄露，本网站(博客)不负任何责任。</p><p>&emsp;&emsp;第十二条本网站(博客)有部分内容来自互联网，如无意中侵犯了哪个媒体、公司、企业或个人等的知识产权，请来电或致函告之<code>邮箱：gaotf.xj@outlook.com</code>，本网站(博客)将在规定时间内给予删除等相关处理，若有涉及版权费等问题，请及时提供相关证明等材料并与我们联系，通过友好协商公平公正原则处理纠纷。</p><p>&emsp;&emsp;第十二条以上声明内容的最终解释权归i-Share网站<code>https://gaotf.tk</code> 所有。</p>]]></content>
      
      <categories>
          
          <category> 必看 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免责声明 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <link href="/googlebee08d6de9634f8a.html"/>
      <url>/googlebee08d6de9634f8a.html</url>
      <content type="html"><![CDATA[google-site-verification: googlebee08d6de9634f8a.html]]></content>
    </entry>
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>links</title>
      <link href="/links/index.html"/>
      <url>/links/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>时间轴</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
